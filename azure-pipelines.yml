name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
- group: build
jobs:
- job: Build
  pool:
    vmImage: ubuntu-16.04
  steps:
  - checkout: self
    clean: true
    persistCredentials: true
  - bash: |
      echo "pipeline variable 'app.registry.url' was not set but is required."
      exit 1
    condition: eq(variables['app.registry.url'], '')
    name: ValidateAppRegistryUrl
  - bash: |
      echo "pipeline variable 'app.registry.username' was not set but is required."
      exit 1
    condition: eq(variables['app.registry.username'], '')
    name: ValidateAppRegistryUsername
  - bash: |
      echo "pipeline variable 'app.registry.password' was not set but is required."
      exit 1
    condition: eq(variables['app.registry.password'], '')
    name: ValidateAppRegistryPassword
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
      sqMavenPluginVersionChoice: 'latest'
      findBugsRunAnalysis: false
  - bash: |
      MAVEN_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -q -Dexpression=project.version -DforceStdout)
      BUILD_NUMBER=${MAVEN_VERSION}-$(git rev-parse --short ${BUILD_SOURCEVERSION})
      echo "##vso[build.updatebuildnumber]${BUILD_NUMBER}"
    name: Version
  - bash: |
      docker login ${APP_REGISTRY_URL} -u ${APP_REGISTRY_USERNAME} -p ${APP_REGISTRY_PASSWORD}
    name: DockerLogin
    env:
      APP_REGISTRY_PASSWORD: $(app.registry.password)
  - bash: |
      docker build ${BUILD_SOURCESDIRECTORY} \
      -t ${APP_REGISTRY_URL}/course-service:${BUILD_BUILDNUMBER} \
      -t latest
    name: DockerBuild
  - bash: |
      docker push ${APP_REGISTRY_URL}/course-service:${BUILD_BUILDNUMBER}
    name: DockerPush
  - bash: |
      mkdir ${BUILD_SOURCESDIRECTORY}/output
      cp ${BUILD_SOURCESDIRECTORY}/target/*.jar ${BUILD_SOURCESDIRECTORY}/output
    name: Output
  - task: PublishTestResults@2
    name: PublishTests
  - publish: $(Build.SourcesDirectory)/output
    artifact: output
    name: PublishOutput

